C51 COMPILER V9.53.0.0   MAIN                                                              02/24/2021 23:59:23 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <REG52.H>                /* special function register declarations   */
   2                                            /* for the intended 8051 derivative         */
   3          #include <stdio.h>                /* prototype declarations for I/O functions */
   4          
   5          #ifdef MONITOR51                         /* Debugging with Monitor-51 needs   */
              char code reserve [3] _at_ 0x23;         /* space for serial interrupt if     */
              #endif                                   /* Stop Exection with Serial Intr.   */
   8                                                   /* is enabled                        */
   9          
  10          /*------------------------------------------------
  11          The main C function.  Program execution starts
  12          here after stack initialization.
  13          ------------------------------------------------*/
  14          void delay(void) {
  15   1      unsigned long n;
  16   1        for(n = 0; n < 100; n++);;
  17   1      }
  18          char s[16];
  19          char symbols[4][4] = {{'E', '0', 'R', 'C'},
  20                                {'9', '8', '7', 'B'},
  21                                {'6', '5', '4', 'A'},
  22                                {'3', '2', '1', 'Z'}};
  23          char symbolsP0[4] =   {'L', 'K', 'J', 'I'};
  24          void lcdSend(int isCommand, unsigned char toLCD) {
  25   1        P3 &= ~(1 << 7);
  26   1          if(isCommand == 0) P3 |= (1 << 6);
  27   1        else if(isCommand == 1) P3 &= ~(1 << 6);
  28   1          delay();
  29   1        P2 = toLCD;
  30   1        P3 |= (1 << 5);
  31   1        delay();
  32   1        P3 &= ~(1 << 5);
  33   1        delay();
  34   1      }
  35          void lcdCommand(unsigned char cmd) {
  36   1          lcdSend(1, cmd);
  37   1      }
  38          
  39          void lcdChar(const char chr) {
  40   1          lcdSend(0, chr);
  41   1      }
  42          
  43          void lcdString(const char* str) {
  44   1         while(*str != '\0') { //*str != '\0'
  45   2              lcdChar(*str);
  46   2              str++;
  47   2          }
  48   1      }
  49          void main (void) {
  50   1      int n1, i, j, k;  
  51   1        TMOD |= 0x10;               /* TMOD: timer 1, mode 2, 8-bit reload        */
  52   1          //TH0   = 0xFF;                /* TH1:  reload value for 1200 baud @ 16MHz   */
  53   1          TR1   = 1;                  /* TR1:  timer 1 run                          */
  54   1        //  TI    = 1;                  /* TI:   set TI to send first char of UART    */
  55   1      
C51 COMPILER V9.53.0.0   MAIN                                                              02/24/2021 23:59:23 PAGE 2   

  56   1         lcdCommand(0x38);
  57   1         lcdCommand(0x01);
  58   1         lcdCommand(0x06);
  59   1         lcdCommand(0x0C);
  60   1        /*
  61   1        while(1) {
  62   1         lcdCommand(0x80); 
  63   1        P1 = 0x0F;
  64   1      n1 = P1;
  65   1      //  s = "";
  66   1        sprintf(s, "%X", n1);
  67   1        lcdString(s);
  68   1        for(i = 0; i > 1000; i++) {
  69   1        delay();
  70   1        }
  71   1      }
  72   1        */
  73   1        while(1) {
  74   2        P1 = 0x0F;
  75   2          P0 |= (1 << 7);
  76   2        for(i = 4; i < 8; i++) {
  77   3          for(j = 4; j < 8; j++) P1 |= (1 << j);
  78   3          P1 &= ~(1 << i);
  79   3          for(k = 0; k < 4; k++) {
  80   4            if(((P1 >> k) & 1) == 0 ) {
  81   5              P3 &= ~(1 << 4);
  82   5              n1 = P1;
  83   5            sprintf(s, "%X", n1);
  84   5              lcdCommand(0x80); 
  85   5              lcdString("Scanc0de: ");
  86   5        lcdString(s);
  87   5              lcdCommand(0xC0);
  88   5              lcdString("Key: ");
  89   5              lcdChar(symbols[i-4][k]);
  90   5              for(j = 0; j < 30; j++) delay();
  91   5            }
  92   4            else {
  93   5              P3 |= (1 << 4);
  94   5            }
  95   4          }
  96   3        }
  97   2        P0 &= ~(1 << 7);
  98   2          for(i = 0; i < 4; i++) {
  99   3            if(((P1 >> i) & 1) == 0 ) {
 100   4              P3 &= ~(1 << 4);
 101   4              n1 = P1;
 102   4            sprintf(s, "%X", n1);
 103   4              lcdCommand(0x80); 
 104   4              lcdString("Scanc0de: ");
 105   4        lcdString(s);
 106   4              lcdCommand(0xC0);
 107   4              lcdString("Key: ");
 108   4              lcdChar(symbolsP0[i]);
 109   4              for(j = 0; j < 30; j++) delay();
 110   4            }
 111   3            else {
 112   4              P3 |= (1 << 4);
 113   4            }
 114   3        }
 115   2      }
 116   1         //lcdString("NEDOPC.ORG");
 117   1        /*
C51 COMPILER V9.53.0.0   MAIN                                                              02/24/2021 23:59:23 PAGE 3   

 118   1        TH1 = 0;
 119   1        while(1) {
 120   1        if(TH1 > 254) {
 121   1          P3 &= ~(1 << 4);
 122   1          delay();
 123   1          TH1 = 0;
 124   1          P3 |= (1 << 4);
 125   1        }
 126   1        }
 127   1        */
 128   1      }
 129          
 130          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    576    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
